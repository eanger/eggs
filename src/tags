!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Entity	entity.cpp	/^Entity::Entity(wchar_t icon_char) {$/;"	f	class:eggs::Entity
Entity	entity.h	/^struct Entity {$/;"	s	namespace:eggs
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
Icon	icon.h	/^class Icon {$/;"	c	namespace:eggs
InputAction	input.h	/^enum class InputAction{$/;"	c	namespace:eggs
LEFT	input.h	/^  LEFT,$/;"	m	class:eggs::InputAction
NONE	input.h	/^  NONE,$/;"	m	class:eggs::InputAction
PLAYER	world.h	/^    PLAYER,$/;"	m	class:eggs::World::Tile
PLAYING	world.h	/^    PLAYING,$/;"	m	class:eggs::World::State
QUIT	input.h	/^  QUIT,$/;"	m	class:eggs::InputAction
RIGHT	input.h	/^  RIGHT,$/;"	m	class:eggs::InputAction
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
START	world.h	/^    START,$/;"	m	class:eggs::World::State
Screen	screen.cpp	/^Screen::Screen(unsigned int width, unsigned int height) :$/;"	f	class:eggs::Screen
Screen	screen.h	/^class Screen{$/;"	c	namespace:eggs
State	state.h	/^class State{$/;"	c	namespace:eggs
State	world.h	/^  enum class State{$/;"	c	class:eggs::World
TOKEN	world.h	/^    TOKEN,$/;"	m	class:eggs::World::Tile
Tile	world.h	/^  enum class Tile{$/;"	c	class:eggs::World
UP	input.h	/^  UP,$/;"	m	class:eggs::InputAction
WALL	world.h	/^    WALL,$/;"	m	class:eggs::World::Tile
World	world.cpp	/^World::World() : $/;"	f	class:eggs::World
World	world.h	/^class World {$/;"	c	namespace:eggs
doUpdateFrameTime	engine.cpp	/^bool doUpdateFrameTime = true;$/;"	m	namespace:__anon1	file:
draw	screen.cpp	/^void Screen::draw() {$/;"	f	class:eggs::Screen
draw_frame_time	screen.cpp	/^void Screen::draw_frame_time(float frame_time, const World& world){$/;"	f	class:eggs::Screen
eggs	engine.cpp	/^namespace eggs {$/;"	n	file:
eggs	engine.h	/^namespace eggs{$/;"	n
eggs	entity.cpp	/^namespace eggs {$/;"	n	file:
eggs	entity.h	/^namespace eggs {$/;"	n
eggs	icon.h	/^namespace eggs{$/;"	n
eggs	input.cpp	/^namespace eggs {$/;"	n	file:
eggs	input.h	/^namespace eggs {$/;"	n
eggs	screen.cpp	/^namespace eggs{$/;"	n	file:
eggs	screen.h	/^namespace eggs{$/;"	n
eggs	sdl_helpers.h	/^namespace eggs {$/;"	n
eggs	state.cpp	/^namespace eggs{$/;"	n	file:
eggs	state.h	/^namespace eggs{$/;"	n
eggs	world.cpp	/^namespace eggs {$/;"	n	file:
eggs	world.h	/^namespace eggs {$/;"	n
empty_	screen.h	/^    SDL_Color token_, player_, wall_, empty_, text_color_;$/;"	m	class:eggs::Screen
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
font_	screen.h	/^    ResourceHandle<TTF_Font> font_;$/;"	m	class:eggs::Screen
frame_time_callback	engine.cpp	/^unsigned int frame_time_callback(unsigned int interval, void* param){$/;"	f	namespace:__anon1
get_input_action	input.cpp	/^InputAction get_input_action(){$/;"	f	namespace:eggs
icon_	entity.h	/^  Icon icon_;$/;"	m	struct:eggs::Entity
kDrawFrameTimePeriodMS	engine.cpp	/^const unsigned int kDrawFrameTimePeriodMS = 500;$/;"	m	namespace:__anon1	file:
kFontPath	screen.cpp	/^const char* kFontPath = BINDIR "\/..\/assets\/Sail-Regular.otf";$/;"	m	namespace:__anon4	file:
kFontPtSize	screen.cpp	/^const int kFontPtSize = 24;$/;"	m	namespace:__anon4	file:
kGameOver	world.cpp	/^const bool kGameOver = true;$/;"	m	namespace:__anon3	file:
kKeepPlaying	world.cpp	/^const bool kKeepPlaying = false;$/;"	m	namespace:__anon3	file:
kPlayerStartLoc	world.h	/^const unsigned int kPlayerStartLoc = kWorldHeight \/ 2;$/;"	m	namespace:__anon2
kScreenHeight	engine.cpp	/^const unsigned int kScreenHeight = 480;$/;"	m	namespace:__anon1	file:
kScreenWidth	engine.cpp	/^const unsigned int kScreenWidth = 640;$/;"	m	namespace:__anon1	file:
kTileSize	screen.cpp	/^const int kTileSize = 10;$/;"	m	namespace:__anon4	file:
kTotalMoves	world.h	/^const unsigned int kTotalMoves = 100;$/;"	m	namespace:__anon2
kWorldHeight	world.h	/^const unsigned int kWorldHeight = 22;$/;"	m	namespace:__anon2
kWorldWidth	world.h	/^const unsigned int kWorldWidth = 22;$/;"	m	namespace:__anon2
main	main.cpp	/^int main(int argc, char* argv[]){$/;"	f
make_scoped_call	sdl_helpers.h	/^ScopedCallHandle make_scoped_call(Creator creator,$/;"	f	namespace:eggs
map_	world.h	/^  std::array<std::array<Tile, kWorldHeight>, kWorldWidth> map_;$/;"	m	class:eggs::World
moves_left_	world.h	/^  unsigned int moves_left_;$/;"	m	class:eggs::World
player_	screen.h	/^    SDL_Color token_, player_, wall_, empty_, text_color_;$/;"	m	class:eggs::Screen
player_x_	world.h	/^  unsigned int player_x_, player_y_;$/;"	m	class:eggs::World
player_y_	world.h	/^  unsigned int player_x_, player_y_;$/;"	m	class:eggs::World
print_line_at	screen.cpp	/^void Screen::print_line_at(const std::string& line,$/;"	f	class:eggs::Screen
render	screen.cpp	/^void Screen::render(const World& world){$/;"	f	class:eggs::Screen
renderer_	screen.h	/^    ResourceHandle<SDL_Renderer> renderer_;$/;"	m	class:eggs::Screen
score_	world.h	/^  unsigned int score_;$/;"	m	class:eggs::World
sdl_init_	screen.h	/^    ScopedCallHandle sdl_init_, ttf_init_;$/;"	m	class:eggs::Screen
sf	icon.h	/^namespace sf{$/;"	n
shape_	icon.h	/^  std::unique_ptr<sf::Shape> shape_;$/;"	m	class:eggs::Icon
start_engine	engine.cpp	/^void start_engine() {$/;"	f	namespace:eggs
state_	world.h	/^  State state_;$/;"	m	class:eggs::World
text_color_	screen.h	/^    SDL_Color token_, player_, wall_, empty_, text_color_;$/;"	m	class:eggs::Screen
token_	screen.h	/^    SDL_Color token_, player_, wall_, empty_, text_color_;$/;"	m	class:eggs::Screen
ttf_init_	screen.h	/^    ScopedCallHandle sdl_init_, ttf_init_;$/;"	m	class:eggs::Screen
update	state.cpp	/^void State::update(int key_pressed){$/;"	f	class:eggs::State
update	world.cpp	/^bool World::update(InputAction action) {$/;"	f	class:eggs::World
wall_	screen.h	/^    SDL_Color token_, player_, wall_, empty_, text_color_;$/;"	m	class:eggs::Screen
window_	screen.h	/^    ResourceHandle<SDL_Window> window_;$/;"	m	class:eggs::Screen
